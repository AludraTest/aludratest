<component-set>
  <components>
    <component>
      <role>org.aludratest.config.Configurator</role>
      <role-hint>default</role-hint>
      <implementation>org.aludratest.config.impl.DefaultConfigurator</implementation>
      <description></description>
      <isolated-realm>false</isolated-realm>
    </component>
    <component>
      <role>org.aludratest.scheduler.RunnerListener</role>
      <role-hint>log4testing</role-hint>
      <implementation>org.aludratest.impl.log4testing.Log4TestingRunnerListener</implementation>
      <description></description>
      <isolated-realm>false</isolated-realm>
      <requirements>
        <requirement>
          <role>org.aludratest.config.AludraTestConfig</role>
          <role-hint></role-hint>
          <field-name>configuration</field-name>
        </requirement>
      </requirements>
    </component>
    <component>
      <role>org.aludratest.scheduler.AludraTestRunner</role>
      <role-hint>default</role-hint>
      <implementation>org.aludratest.scheduler.impl.AludraTestRunnerImpl</implementation>
      <description></description>
      <isolated-realm>false</isolated-realm>
      <requirements>
        <requirement>
          <role>org.aludratest.scheduler.RunnerListenerRegistry</role>
          <role-hint></role-hint>
          <field-name>listenerRegistry</field-name>
        </requirement>
        <requirement>
          <role>org.aludratest.config.AludraTestConfig</role>
          <role-hint></role-hint>
          <field-name>aludraConfig</field-name>
        </requirement>
        <requirement>
          <role>org.aludratest.service.AludraServiceManager</role>
          <role-hint></role-hint>
          <field-name>serviceManager</field-name>
        </requirement>
      </requirements>
    </component>
    <component>
      <role>org.aludratest.scheduler.RunnerListener</role>
      <role-hint>pending-tests</role-hint>
      <implementation>org.aludratest.scheduler.impl.PendingTestsObserver</implementation>
      <description></description>
      <isolated-realm>false</isolated-realm>
    </component>
    <component>
      <role>org.aludratest.scheduler.RunnerListenerRegistry</role>
      <role-hint>default</role-hint>
      <implementation>org.aludratest.scheduler.impl.RunnerListenerRegistryImpl</implementation>
      <description></description>
      <isolated-realm>false</isolated-realm>
      <requirements>
        <requirement>
          <role>org.aludratest.scheduler.RunnerListener</role>
          <field-name>listeners</field-name>
        </requirement>
      </requirements>
    </component>
    <component>
      <role>org.aludratest.scheduler.RunnerTreeBuilder</role>
      <role-hint>default</role-hint>
      <implementation>org.aludratest.scheduler.impl.RunnerTreeBuilderImpl</implementation>
      <instantiation-strategy>per-lookup</instantiation-strategy>
      <description></description>
      <isolated-realm>false</isolated-realm>
      <requirements>
        <requirement>
          <role>org.aludratest.testcase.data.TestDataProvider</role>
          <role-hint></role-hint>
          <field-name>testDataProvider</field-name>
        </requirement>
        <requirement>
          <role>org.aludratest.config.AludraTestConfig</role>
          <role-hint></role-hint>
          <field-name>aludraConfig</field-name>
        </requirement>
      </requirements>
    </component>
    <component>
      <role>org.aludratest.service.gui.component.GUIComponentFactory</role>
      <role-hint>default</role-hint>
      <implementation>org.aludratest.service.gui.component.impl.DefaultGUIComponentFactory</implementation>
      <instantiation-strategy>per-lookup</instantiation-strategy>
      <description></description>
      <isolated-realm>false</isolated-realm>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.PlexusContainer</role>
          <role-hint></role-hint>
          <field-name>plexusContainer</field-name>
        </requirement>
      </requirements>
    </component>
    <component>
      <role>org.aludratest.service.AludraServiceManager</role>
      <role-hint>default</role-hint>
      <implementation>org.aludratest.service.impl.AludraServiceManagerImpl</implementation>
      <instantiation-strategy>singleton</instantiation-strategy>
      <description></description>
      <isolated-realm>false</isolated-realm>
      <requirements>
        <requirement>
          <role>org.codehaus.plexus.PlexusContainer</role>
          <role-hint></role-hint>
          <field-name>container</field-name>
        </requirement>
        <requirement>
          <role>org.aludratest.service.ServiceWrapper</role>
          <field-name>serviceWrappers</field-name>
        </requirement>
      </requirements>
    </component>
    <component>
      <role>org.aludratest.testcase.data.impl.xml.ScriptLibrary</role>
      <role-hint>default</role-hint>
      <implementation>org.aludratest.testcase.data.impl.xml.DefaultScriptLibrary</implementation>
      <description></description>
      <isolated-realm>false</isolated-realm>
      <requirements>
        <requirement>
          <role>org.aludratest.config.AludraTestConfig</role>
          <role-hint></role-hint>
          <field-name>aludraConfig</field-name>
        </requirement>
      </requirements>
    </component>
    <component>
      <role>org.aludratest.service.ServiceWrapper</role>
      <role-hint>aludra</role-hint>
      <implementation>org.aludratest.testcase.event.impl.DefaultAludraServiceWrapper</implementation>
      <description></description>
      <isolated-realm>false</isolated-realm>
    </component>
  </components>
</component-set>
