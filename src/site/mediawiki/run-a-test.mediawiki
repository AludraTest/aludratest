== Run a Test ==

=== Run a tests in Eclipse ===

In order to start tests in Eclipse, a generic 'Eclipse run configuration' needs to be defined. This is a one-time-effort, after which you can execute any test with this generic configuration.

==== Creating a Run Configuration in Eclipse ====

# Open the Eclipse Run Configurations dialog
# Create a new "Java Application" run configuration 
# Change the name to "AludraTest"
# As project, select your client project which contains the test class(es)
# As main class, select <code>org.aludratest.app.AludraSuiteRunner</code>
# Select the "Arguments" tab
# In the text area "Program arguments", enter <code>${resource_path}</code>
# Click "Run"

Now the test class is executed. Please note that the test class must be the '''active editor''' in Eclipse when you click
on "Run".

==== (Re)using the run configuration ====

You can reuse this single run configuration to run any individual test: Select the test class in the Package Explorer, then click the triangle on the right of the "Run" button and click "AludraTest" in the appearing list.

[[Image:AludraTest2-Eclipse-3.png]]

=== Creating an eclipse Run Configuration with JUnit ===

Testcases can be executed locally with the use of JUnit functions in Eclipse. Follow the guideline below:

* Create a class '''AludraJUnitTest.java''' in your project

<code>
 package com.acme.mytests.junit;
 
 import org.aludratest.junit.AludraTestJUnitSuite;
 import org.junit.runner.RunWith;
 
 @RunWith(AludraTestJUnitSuite.class)
 public class AludraJUnitTest {
 }
</code>

* Create a '''JUnit''' run configuration which executes exactly this class. Add this as a '''VM argument''' on the second tab:

<code>-Dsuite=${resource_path}</code> 

Now you can reuse this single run configuration to run any individual test: Select the test class in the Package Explorer, then click the triangle on the right of the "Run" button and click "AludraTest" in the appearing list.

=== Run tests with Maven ===

 TODO


